#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Ce code a été généré par un outil.
//     Version du runtime :4.0.30319.42000
//
//     Les modifications apportées à ce fichier peuvent provoquer un comportement incorrect et seront perdues si
//     le code est régénéré.
// </auto-generated>
//------------------------------------------------------------------------------

namespace dotnetprojet
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="Project_DB")]
	public partial class DBDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Définitions de méthodes d'extensibilité
    partial void OnCreated();
    partial void InsertChildren(Children instance);
    partial void UpdateChildren(Children instance);
    partial void DeleteChildren(Children instance);
    partial void InsertPerson(Person instance);
    partial void UpdatePerson(Person instance);
    partial void DeletePerson(Person instance);
    partial void InsertEvent(Event instance);
    partial void UpdateEvent(Event instance);
    partial void DeleteEvent(Event instance);
    partial void InsertPersons(Persons instance);
    partial void UpdatePersons(Persons instance);
    partial void DeletePersons(Persons instance);
    #endregion
		
		public DBDataContext() : 
				base(global::dotnetprojet.Properties.Settings.Default.Project_DBConnectionString1, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DBDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Children> Childrens
		{
			get
			{
				return this.GetTable<Children>();
			}
		}
		
		public System.Data.Linq.Table<Person> Persons
		{
			get
			{
				return this.GetTable<Person>();
			}
		}
		
		public System.Data.Linq.Table<Event> Events
		{
			get
			{
				return this.GetTable<Event>();
			}
		}
		
		public System.Data.Linq.Table<User> Users
		{
			get
			{
				return this.GetTable<User>();
			}
		}
		
		public System.Data.Linq.Table<Persons> Persons1
		{
			get
			{
				return this.GetTable<Persons>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Children")]
	public partial class Children : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IdChildren;
		
		private string _childrenName;
		
		private string _studyLevel;
		
		private double _schoolDistance;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIdChildrenChanging(int value);
    partial void OnIdChildrenChanged();
    partial void OnchildrenNameChanging(string value);
    partial void OnchildrenNameChanged();
    partial void OnstudyLevelChanging(string value);
    partial void OnstudyLevelChanged();
    partial void OnschoolDistanceChanging(double value);
    partial void OnschoolDistanceChanged();
    #endregion
		
		public Children()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IdChildren", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int IdChildren
		{
			get
			{
				return this._IdChildren;
			}
			set
			{
				if ((this._IdChildren != value))
				{
					this.OnIdChildrenChanging(value);
					this.SendPropertyChanging();
					this._IdChildren = value;
					this.SendPropertyChanged("IdChildren");
					this.OnIdChildrenChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_childrenName", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string childrenName
		{
			get
			{
				return this._childrenName;
			}
			set
			{
				if ((this._childrenName != value))
				{
					this.OnchildrenNameChanging(value);
					this.SendPropertyChanging();
					this._childrenName = value;
					this.SendPropertyChanged("childrenName");
					this.OnchildrenNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_studyLevel", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string studyLevel
		{
			get
			{
				return this._studyLevel;
			}
			set
			{
				if ((this._studyLevel != value))
				{
					this.OnstudyLevelChanging(value);
					this.SendPropertyChanging();
					this._studyLevel = value;
					this.SendPropertyChanged("studyLevel");
					this.OnstudyLevelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schoolDistance", DbType="Float NOT NULL")]
		public double schoolDistance
		{
			get
			{
				return this._schoolDistance;
			}
			set
			{
				if ((this._schoolDistance != value))
				{
					this.OnschoolDistanceChanging(value);
					this.SendPropertyChanging();
					this._schoolDistance = value;
					this.SendPropertyChanged("schoolDistance");
					this.OnschoolDistanceChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persons")]
	public partial class Person : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _personName;
		
		private string _job;
		
		private string _schedule;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpersonNameChanging(int value);
    partial void OnpersonNameChanged();
    partial void OnjobChanging(string value);
    partial void OnjobChanged();
    partial void OnscheduleChanging(string value);
    partial void OnscheduleChanged();
    #endregion
		
		public Person()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personName", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int personName
		{
			get
			{
				return this._personName;
			}
			set
			{
				if ((this._personName != value))
				{
					this.OnpersonNameChanging(value);
					this.SendPropertyChanging();
					this._personName = value;
					this.SendPropertyChanged("personName");
					this.OnpersonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string schedule
		{
			get
			{
				return this._schedule;
			}
			set
			{
				if ((this._schedule != value))
				{
					this.OnscheduleChanging(value);
					this.SendPropertyChanging();
					this._schedule = value;
					this.SendPropertyChanged("schedule");
					this.OnscheduleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Events")]
	public partial class Event : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idTask;
		
		private string _person;
		
		private string _eventName;
		
		private System.DateTime _startDate;
		
		private System.DateTime _finishDate;
		
		private string _location;
		
		private string _type;
		
		private string _description;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidTaskChanging(int value);
    partial void OnidTaskChanged();
    partial void OnpersonChanging(string value);
    partial void OnpersonChanged();
    partial void OneventNameChanging(string value);
    partial void OneventNameChanged();
    partial void OnstartDateChanging(System.DateTime value);
    partial void OnstartDateChanged();
    partial void OnfinishDateChanging(System.DateTime value);
    partial void OnfinishDateChanged();
    partial void OnlocationChanging(string value);
    partial void OnlocationChanged();
    partial void OntypeChanging(string value);
    partial void OntypeChanged();
    partial void OndescriptionChanging(string value);
    partial void OndescriptionChanged();
    #endregion
		
		public Event()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idTask", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int idTask
		{
			get
			{
				return this._idTask;
			}
			set
			{
				if ((this._idTask != value))
				{
					this.OnidTaskChanging(value);
					this.SendPropertyChanging();
					this._idTask = value;
					this.SendPropertyChanged("idTask");
					this.OnidTaskChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_person", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string person
		{
			get
			{
				return this._person;
			}
			set
			{
				if ((this._person != value))
				{
					this.OnpersonChanging(value);
					this.SendPropertyChanging();
					this._person = value;
					this.SendPropertyChanged("person");
					this.OnpersonChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_eventName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string eventName
		{
			get
			{
				return this._eventName;
			}
			set
			{
				if ((this._eventName != value))
				{
					this.OneventNameChanging(value);
					this.SendPropertyChanging();
					this._eventName = value;
					this.SendPropertyChanged("eventName");
					this.OneventNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_startDate", DbType="DateTime NOT NULL")]
		public System.DateTime startDate
		{
			get
			{
				return this._startDate;
			}
			set
			{
				if ((this._startDate != value))
				{
					this.OnstartDateChanging(value);
					this.SendPropertyChanging();
					this._startDate = value;
					this.SendPropertyChanged("startDate");
					this.OnstartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_finishDate", DbType="DateTime NOT NULL")]
		public System.DateTime finishDate
		{
			get
			{
				return this._finishDate;
			}
			set
			{
				if ((this._finishDate != value))
				{
					this.OnfinishDateChanging(value);
					this.SendPropertyChanging();
					this._finishDate = value;
					this.SendPropertyChanged("finishDate");
					this.OnfinishDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_location", DbType="VarChar(30) NOT NULL", CanBeNull=false)]
		public string location
		{
			get
			{
				return this._location;
			}
			set
			{
				if ((this._location != value))
				{
					this.OnlocationChanging(value);
					this.SendPropertyChanging();
					this._location = value;
					this.SendPropertyChanged("location");
					this.OnlocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_type", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string type
		{
			get
			{
				return this._type;
			}
			set
			{
				if ((this._type != value))
				{
					this.OntypeChanging(value);
					this.SendPropertyChanging();
					this._type = value;
					this.SendPropertyChanged("type");
					this.OntypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_description", DbType="Text NOT NULL", CanBeNull=false, UpdateCheck=UpdateCheck.Never)]
		public string description
		{
			get
			{
				return this._description;
			}
			set
			{
				if ((this._description != value))
				{
					this.OndescriptionChanging(value);
					this.SendPropertyChanging();
					this._description = value;
					this.SendPropertyChanged("description");
					this.OndescriptionChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.[User]")]
	public partial class User
	{
		
		private string _firstName;
		
		private string _lastName;
		
		private string _email;
		
		private string _password;
		
		private System.DateTime _birthday;
		
		private int _genre;
		
		private string _address;
		
		private int _status;
		
		private int _nbChildren;
		
		private int _father;
		
		private int _mother;
		
		public User()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_firstName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string firstName
		{
			get
			{
				return this._firstName;
			}
			set
			{
				if ((this._firstName != value))
				{
					this._firstName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_lastName", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string lastName
		{
			get
			{
				return this._lastName;
			}
			set
			{
				if ((this._lastName != value))
				{
					this._lastName = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this._email = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string password
		{
			get
			{
				return this._password;
			}
			set
			{
				if ((this._password != value))
				{
					this._password = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="DateTime NOT NULL")]
		public System.DateTime birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this._birthday = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_genre", DbType="Int NOT NULL")]
		public int genre
		{
			get
			{
				return this._genre;
			}
			set
			{
				if ((this._genre != value))
				{
					this._genre = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_address", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string address
		{
			get
			{
				return this._address;
			}
			set
			{
				if ((this._address != value))
				{
					this._address = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_status", DbType="Int NOT NULL")]
		public int status
		{
			get
			{
				return this._status;
			}
			set
			{
				if ((this._status != value))
				{
					this._status = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_nbChildren", DbType="Int NOT NULL")]
		public int nbChildren
		{
			get
			{
				return this._nbChildren;
			}
			set
			{
				if ((this._nbChildren != value))
				{
					this._nbChildren = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_father", DbType="Int NOT NULL")]
		public int father
		{
			get
			{
				return this._father;
			}
			set
			{
				if ((this._father != value))
				{
					this._father = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_mother", DbType="Int NOT NULL")]
		public int mother
		{
			get
			{
				return this._mother;
			}
			set
			{
				if ((this._mother != value))
				{
					this._mother = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Persons")]
	public partial class Persons : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _personName;
		
		private string _job;
		
		private string _schedule;
		
    #region Définitions de méthodes d'extensibilité
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnpersonNameChanging(string value);
    partial void OnpersonNameChanged();
    partial void OnjobChanging(string value);
    partial void OnjobChanged();
    partial void OnscheduleChanging(string value);
    partial void OnscheduleChanged();
    #endregion
		
		public Persons()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_personName", DbType="VarChar(50) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string personName
		{
			get
			{
				return this._personName;
			}
			set
			{
				if ((this._personName != value))
				{
					this.OnpersonNameChanging(value);
					this.SendPropertyChanging();
					this._personName = value;
					this.SendPropertyChanged("personName");
					this.OnpersonNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_job", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string job
		{
			get
			{
				return this._job;
			}
			set
			{
				if ((this._job != value))
				{
					this.OnjobChanging(value);
					this.SendPropertyChanging();
					this._job = value;
					this.SendPropertyChanged("job");
					this.OnjobChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_schedule", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string schedule
		{
			get
			{
				return this._schedule;
			}
			set
			{
				if ((this._schedule != value))
				{
					this.OnscheduleChanging(value);
					this.SendPropertyChanging();
					this._schedule = value;
					this.SendPropertyChanged("schedule");
					this.OnscheduleChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
